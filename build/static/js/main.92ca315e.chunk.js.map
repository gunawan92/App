{"version":3,"sources":["store/todo/constants/todo.constants.ts","store/todo/reducers/todo.reducer.ts","store/todo/reducers/index.ts","store/app.store.ts","components/AddTodoForm/index.tsx","components/TodoItem/index.tsx","components/TodoList/index.tsx","containers/todos/index.tsx","store/todo/actions/todo.actions.ts","configs/LeagueConstants/index.ts","containers/team/index.tsx","containers/league/index.tsx","containers/dashboard/index.tsx","routes/index.tsx","containers/app/index.tsx","index.tsx"],"names":["TODO_CONSTANTS","initialState","todos","rootReducer","combineReducers","todo","state","action","type","Object","assign","concat","payload","id","uuidV1","map","completed","filter","reduxPersistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","AddTodoForm","onFormSubmit","useForm","form","onFinish","name","getFieldValue","resetFields","layout","className","gutter","xs","sm","md","lg","xl","Item","rules","required","message","placeholder","htmlType","block","PlusCircleFilled","TodoItem","onTodoRemoval","onTodoToggle","actions","title","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","onChange","defaultChecked","onConfirm","danger","color","TodoList","locale","emptyText","dataSource","renderItem","pagination","position","pageSize","TodosContainer","useSelector","dispatch","useDispatch","justify","align","span","subTitle","addTodo","success","removeTodo","warn","toggleTodo","info","LEAGUES","Text","Title","Footer","Header","Content","Sider","GREEN","RED","YELLOW","isNew","style","matchColumns","dataIndex","render","value","record","props","children","score","ft","background","pointChangeColumn","NOT_VALID","LAST_SEASON","THIS_SEASON","getHomePoint","getAwayPoint","getPointChange","lastSeasonData","thisSeasonData","pointChangeData","index","length","lastSeason","thisSeason","homeScore","awayScore","lastSeasonTotalPoint","thisSeasonTotalPoint","push","pointChange","getSeasonData","commonClubs","seasonMatches","teamId","thisSeasonMatchesMap","Map","element","team1","has","matches","get","set","_","cloneDeep","getMatchTable","seasonData","data","bordered","columns","size","summary","pageData","totalHome","totalAway","forEach","Summary","Row","Cell","strong","getLatestTitle","latestMatch","team2","date","TeamContainer","routes","path","breadcrumbName","lastSeasonDemotedData","thisSeasonPromotedData","loading","componentDidMount","a","setState","console","log","match","params","leagueId","fetch","response","json","thisSeasonClubs","clubs","sort","b","lastSeasonClubs","intersectionBy","lastSeasonDemotedTeams","differenceBy","thisSeasonPromotedTeams","lastSeasonMatches","thisSeasonMatches","sortedThisSeasonData","targetTeamKey","this","minHeight","breadcrumb","code","marginBottom","level","totalChange","marginTop","React","Component","Meta","LeagueContainer","teams","clubSorted","team","hoverable","onClick","e","history","DashboardContainer","extra","TelegramShareButton","url","TelegramIcon","round","Routes","exact","component","App","storePersistor","targetHTMLElement","document","getElementById"],"mappings":"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","file":"static/js/main.92ca315e.chunk.js","sourcesContent":["export const TODO_CONSTANTS = {\n  ADD_TODO_SUCCESS: 'ADD_TODO_SUCCESS',\n  TOGGLE_TODO_SUCCESS: 'TOGGLE_TODO_SUCCESS',\n  REMOVE_TODO_SUCCESS: 'REMOVE_TODO_SUCCESS'\n};\n","import { TODO_CONSTANTS } from 'store/todo/constants';\nimport { Todo } from 'store/todo/models/todo.model';\nimport { TodoActionTypes } from 'store/todo/actions/todo.actions.types';\nimport { v1 as uuidV1 } from 'uuid';\n\ninterface TodoReducerInterface {\n  todos: Todo[];\n}\n\nconst initialState: TodoReducerInterface = {\n  todos: []\n};\n\nexport const todoReducer = (state = initialState, action: TodoActionTypes) => {\n  switch (action.type) {\n    case TODO_CONSTANTS.ADD_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.concat({\n          ...action.payload,\n          ...{\n            id: uuidV1()\n          }\n        })\n      });\n\n    case TODO_CONSTANTS.TOGGLE_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.map((todo: Todo) =>\n          todo.id === action.payload.id\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )\n      });\n    case TODO_CONSTANTS.REMOVE_TODO_SUCCESS:\n      return {\n        todos: state.todos.filter((todo: Todo) => todo.id !== action.payload.id)\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { todoReducer } from './todo.reducer';\n\nexport const rootReducer = combineReducers({\n  todo: todoReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, Store } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer, PersistConfig } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport { rootReducer } from 'store/todo/reducers';\n\nconst reduxPersistConfig: PersistConfig<any> = {\n  key: 'application',\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(reduxPersistConfig, rootReducer);\n\nexport const store: Store = createStore(pReducer, applyMiddleware(thunk));\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { Form, Row, Col, Button, Input } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nimport './styles.less';\nimport { Todo } from 'store/todo/models/todo.model';\n\ninterface AddTodoFormProps {\n  onFormSubmit: (todo: Todo) => void;\n}\n\nexport const AddTodoForm: React.StatelessComponent<AddTodoFormProps> = ({\n  onFormSubmit\n}) => {\n  const [form] = Form.useForm();\n\n  const onFinish = () => {\n    onFormSubmit({\n      name: form.getFieldValue('name')\n    });\n\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={onFinish}\n      layout=\"horizontal\"\n      className=\"todo-form\"\n    >\n      <Row gutter={20}>\n        <Col xs={24} sm={24} md={17} lg={19} xl={20}>\n          <Form.Item\n            name={'name'}\n            rules={[{ required: true, message: 'This field is required' }]}\n          >\n            <Input placeholder=\"What needs to be done?\" />\n          </Form.Item>\n        </Col>\n        <Col xs={24} sm={24} md={7} lg={5} xl={4}>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            <PlusCircleFilled />\n            Add todo\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n","import React from 'react';\nimport { Tooltip, Tag, List, Button, Popconfirm, Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\n\nimport './styles.less';\nimport { Todo } from 'store/todo/models/todo.model';\n\ninterface TodoItemProps {\n  todo: Todo;\n  onTodoRemoval: (todo: Todo) => void;\n  onTodoToggle: (todo: Todo) => void;\n}\n\nexport const TodoItem: React.StatelessComponent<TodoItemProps> = ({\n  todo,\n  onTodoRemoval,\n  onTodoToggle,\n}) => {\n  return (\n    <List.Item\n      actions={[\n        <Tooltip\n          title={todo.completed ? 'Mark as uncompleted' : 'Mark as completed'}\n        >\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            onChange={() => onTodoToggle(todo)}\n            defaultChecked={todo.completed}\n          />\n        </Tooltip>,\n        <Popconfirm\n          title=\"Are you sure you want to delete?\"\n          onConfirm={() => {\n            onTodoRemoval(todo);\n          }}\n        >\n          <Button className=\"remove-todo-button\" type=\"primary\" danger>\n            X\n          </Button>\n        </Popconfirm>,\n      ]}\n      className=\"list-item\"\n      key={todo.id}\n    >\n      <div className=\"todo-item\">\n        <Tag color={todo.completed ? 'cyan' : 'red'} className=\"todo-tag\">\n          {todo.name}\n        </Tag>\n      </div>\n    </List.Item>\n  );\n};\n","import React from 'react';\n\nimport { List } from 'antd';\n\nimport { Todo } from 'store/todo/models/todo.model';\nimport { TodoItem } from 'components/TodoItem';\n\ninterface TodoListProps {\n  todos: Todo[];\n  onTodoRemoval: (todo: Todo) => void;\n  onTodoToggle: (todo: Todo) => void;\n}\n\nexport const TodoList: React.StatelessComponent<TodoListProps> = ({\n  todos,\n  onTodoRemoval,\n  onTodoToggle\n}) => (\n  <List\n    locale={{\n      emptyText: \"There's nothing to do :(\"\n    }}\n    dataSource={todos}\n    renderItem={todo => (\n      <TodoItem\n        todo={todo}\n        onTodoToggle={onTodoToggle}\n        onTodoRemoval={onTodoRemoval}\n      />\n    )}\n    pagination={{\n      position: 'bottom',\n      pageSize: 10\n    }}\n  />\n);\n","import React from 'react';\nimport { Row, Col, Card, PageHeader } from 'antd';\n\nimport { Todo } from 'store/todo/models/todo.model';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo, removeTodo, toggleTodo } from 'store/todo/actions';\nimport { RootState } from 'store/todo/reducers';\nimport { AddTodoForm } from 'components/AddTodoForm';\nimport { TodoList } from 'components/TodoList';\nimport { message } from 'antd';\n\nimport './styles.less';\n\ninterface TodosContainerProps {}\n\nexport const TodosContainer: React.FunctionComponent<TodosContainerProps> = () => {\n  const todos: Todo[] = useSelector((state: RootState) => state.todo.todos);\n\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (todo: Todo): void => {\n    dispatch(addTodo(todo));\n    message.success('Todo added!');\n  };\n\n  const handleRemoveTodo = (todo: Todo): void => {\n    dispatch(removeTodo(todo));\n    message.warn('Todo removed!');\n  };\n\n  const handleTodoToggle = (todo: Todo): void => {\n    dispatch(toggleTodo(todo));\n    message.info('Todo state updated!');\n  };\n\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      gutter={[0, 20]}\n      className=\"todos-container\"\n    >\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 23 }}\n        md={{ span: 21 }}\n        lg={{ span: 20 }}\n        xl={{ span: 18 }}\n      >\n        <PageHeader\n          title=\"Add Todo\"\n          subTitle=\"To add a todo, just fill the form below and click in add todo.\"\n        />\n      </Col>\n\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 23 }}\n        md={{ span: 21 }}\n        lg={{ span: 20 }}\n        xl={{ span: 18 }}\n      >\n        <Card title=\"Create a new todo\">\n          <AddTodoForm onFormSubmit={handleFormSubmit} />\n        </Card>\n      </Col>\n\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 23 }}\n        md={{ span: 21 }}\n        lg={{ span: 20 }}\n        xl={{ span: 18 }}\n      >\n        <Card title=\"Todo List\">\n          <TodoList\n            todos={todos}\n            onTodoRemoval={handleRemoveTodo}\n            onTodoToggle={handleTodoToggle}\n          />\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import { Todo } from 'store/todo/models/todo.model';\nimport { TodoActionTypes } from 'store/todo/actions/todo.actions.types';\nimport { TODO_CONSTANTS } from 'store/todo/constants';\n\nexport function addTodo(todo: Todo): TodoActionTypes {\n  return {\n    type: TODO_CONSTANTS.ADD_TODO_SUCCESS,\n    payload: todo\n  };\n}\n\nexport function removeTodo(todo: Todo): TodoActionTypes {\n  return {\n    type: TODO_CONSTANTS.REMOVE_TODO_SUCCESS,\n    payload: todo\n  };\n}\n\nexport function toggleTodo(todo: Todo): TodoActionTypes {\n  return {\n    type: TODO_CONSTANTS.TOGGLE_TODO_SUCCESS,\n    payload: todo\n  };\n}\n","export const LEAGUES: any[] = [\n  {\n    \"code\": \"en.1\",\n    \"name\": \"English Premier League\"\n  },\n  {\n    \"code\": \"de.1\",\n    \"name\": \"Bundesliga\"\n  },\n  {\n    \"code\": \"es.1\",\n    \"name\": \"Primera División\"\n  },\n  {\n    \"code\": \"it.1\",\n    \"name\": \"Serie A\"\n  },\n  {\n    \"code\": \"fr.1\",\n    \"name\": \"Ligue 1\"\n  }\n];","import React from 'react';\nimport { Row, Col, PageHeader, Table, Typography, Layout, Spin, Alert } from 'antd';\nimport { GithubFilled, TwitterSquareFilled } from '@ant-design/icons';\n\nimport './styles.less';\nimport { RouteComponentProps } from 'react-router-dom';\nimport _ from 'lodash';\nimport { LEAGUES } from 'configs/LeagueConstants';\nimport { RedditIcon, RedditShareButton, TelegramIcon, TelegramShareButton, TwitterIcon, TwitterShareButton } from 'react-share';\n\nconst { Text, Title } = Typography;\nconst { Header, Footer, Sider, Content } = Layout;\n\ninterface RouterProps {\n  leagueId: string,\n  teamId: string\n}\n\ninterface IProps extends RouteComponentProps<RouterProps> { }\n\n\ninterface IState {\n  lastSeasonData: any[],\n  thisSeasonData: any[],\n  pointChangeData: any[],\n  lastSeasonDemotedData: any[],\n  thisSeasonPromotedData: any[],\n  latestMatch: any,\n  loading: boolean\n}\n\nconst GREEN = \"#67AA52\";\nconst RED = \"#F92610\";\nconst YELLOW = \"#EBC73D\";\n\nconst isNew = (isNew: boolean) => isNew ? <sup><Text style={{ color: \"white\" }}>New</Text></sup> : null\n\nconst matchColumns = [\n  {\n    title: 'Team',\n    dataIndex: 'name',\n    key: 'name',\n    align: 'center' as \"center\",\n    render(value: any, record: any) {\n      return {\n        props: {\n          // style: { background: color },\n          // align: 'center' as \"center\",\n        },\n        children: <div>{value}</div>\n      };\n    }\n  },\n  {\n    title: 'Home',\n    dataIndex: 'homeScore',\n    key: 'homeScore',\n    align: 'center' as \"center\",\n    render(value: any, record: any) {\n      if (value.score) {\n        // console.log(value);\n        const score = value.score.ft;\n        let color = \"white\";\n        if (score[0] > score[1]) {\n          color = GREEN;\n        }\n        else if (score[0] < score[1]) {\n          color = RED;\n        }\n        else {\n          color = YELLOW;\n        }\n        return {\n          props: {\n            style: { background: color },\n            // align: 'center' as \"center\",\n          },\n          children: <div>{score[0]} - {score[1]} {isNew(value.isNew)}</div>\n        };\n      }\n    }\n  },\n  {\n    title: 'Away',\n    dataIndex: 'awayScore',\n    key: 'awayScore',\n    align: 'center' as \"center\",\n    render(value: any, record: any) {\n      if (value.score) {\n        // console.log(value);\n        const score = value.score.ft;\n        let color = \"white\";\n        if (score[0] < score[1]) {\n          color = GREEN;\n        }\n        else if (score[0] > score[1]) {\n          color = RED;\n        }\n        else {\n          color = YELLOW;\n        }\n        return {\n          props: {\n            style: { background: color },\n            // align: 'center' as \"center\",\n          },\n          children: <div>{score[0]} - {score[1]} {isNew(value.isNew)}</div>\n        };\n      }\n    }\n  }\n];\n\nconst pointChangeColumn = [\n  {\n    title: 'Point Change',\n    dataIndex: 'pointChange',\n    key: 'pointChange',\n    align: 'center' as \"center\",\n    render(value: number, record: any) {\n      if (value !== NOT_VALID) {\n        let color = \"white\";\n        if (value > 0) {\n          color = GREEN;\n        }\n        else if (value < 0) {\n          color = RED;\n        }\n        else {\n          color = YELLOW;\n        }\n        return {\n          props: {\n            style: { background: color },\n            // align: 'center',\n          },\n          children: <div>{value}</div>\n        };\n      }\n      else {\n        return {\n          props: {\n            style: { background: \"white\" },\n            // align: 'center'\n          },\n          children: <div>-</div>\n        };\n      }\n    }\n  }\n];\n\nconst LAST_SEASON = \"2019-20\";\nconst THIS_SEASON = \"2020-21\";\n\n\nconst getHomePoint = (score: number[]) => {\n  if (score[0] > score[1]) {\n    return 3;\n  }\n  else if (score[0] < score[1]) {\n    return 0;\n  }\n  else {\n    return 1;\n  }\n}\n\nconst getAwayPoint = (score: number[]) => {\n  if (score[0] < score[1]) {\n    return 3;\n  }\n  else if (score[0] > score[1]) {\n    return 0;\n  }\n  else {\n    return 1;\n  }\n}\n\nconst NOT_VALID = -100;\nconst getPointChange = (lastSeasonData: any[], thisSeasonData: any) => {\n  let pointChangeData: any[] = [];\n  for (let index = 0; index < lastSeasonData.length; index++) {\n    const lastSeason = lastSeasonData[index];\n    const thisSeason = thisSeasonData[index];\n    if (!thisSeason.homeScore.score && !thisSeason.awayScore.score) {\n      pointChangeData.push({\n        key: index + 1,\n        pointChange: NOT_VALID\n      })\n      continue;\n    }\n    let lastSeasonTotalPoint = 0;\n    let thisSeasonTotalPoint = 0;\n    if (lastSeason.homeScore.score && thisSeason.homeScore.score) {\n      lastSeasonTotalPoint += getHomePoint(lastSeason.homeScore.score.ft);\n      thisSeasonTotalPoint += getHomePoint(thisSeason.homeScore.score.ft);\n    }\n    if (lastSeason.awayScore.score && thisSeason.awayScore.score) {\n      lastSeasonTotalPoint += getAwayPoint(lastSeason.awayScore.score.ft);\n      thisSeasonTotalPoint += getAwayPoint(thisSeason.awayScore.score.ft);\n    }\n    pointChangeData.push({\n      key: index + 1,\n      pointChange: thisSeasonTotalPoint - lastSeasonTotalPoint\n    })\n  }\n  return pointChangeData;\n}\n\n\nconst getSeasonData = (commonClubs: any[], seasonMatches: any[], teamId: string) => {\n\n  let thisSeasonMatchesMap: Map<string, any[]> = new Map();\n\n  for (let index = 0; index < seasonMatches.length; index++) {\n    const element = seasonMatches[index];\n    let key = 'team1';\n    if (element.team1 === teamId) {\n      key = 'team2';\n    }\n    if (thisSeasonMatchesMap.has(element[key])) {\n      let matches: any[] = thisSeasonMatchesMap.get(element[key]) || [];\n      matches?.push(element);\n      thisSeasonMatchesMap.set(element[key], matches);\n    }\n    else {\n      thisSeasonMatchesMap.set(element[key], [element]);\n    }\n  }\n  let thisSeasonData: any[] = [];\n  for (let index = 0; index < commonClubs.length; index++) {\n    const element: any = _.cloneDeep(commonClubs[index]);\n    let matches: any[] = thisSeasonMatchesMap.get(element.name) || [];\n    if (matches[0].team1 === teamId) {\n      element.homeScore = matches[0];\n      element.awayScore = matches[1];\n    }\n    else {\n      element.homeScore = matches[1];\n      element.awayScore = matches[0];\n    }\n    thisSeasonData.push(element)\n  }\n  return thisSeasonData;\n}\n\n\nconst getMatchTable = (seasonData: any, title: string) => {\n  return (\n    <Table\n      title={(data: any) => title}\n      bordered\n      columns={matchColumns}\n      dataSource={seasonData}\n      pagination={false}\n      size=\"small\"\n      summary={pageData => {\n        let totalHome = 0;\n        let totalAway = 0;\n\n        pageData.forEach(({ homeScore, awayScore }) => {\n          if (homeScore.score) {\n            totalHome += getHomePoint(homeScore.score.ft);\n          }\n          if (awayScore.score) {\n            totalAway += getAwayPoint(awayScore.score.ft);\n          }\n        });\n\n        return (\n          <>\n            <Table.Summary.Row>\n              <Table.Summary.Cell align=\"center\" index={0}>\n                <Text strong>Total</Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell align=\"center\" index={1}>\n                <Text strong>{totalHome}</Text>\n              </Table.Summary.Cell>\n              <Table.Summary.Cell align=\"center\" index={2}>\n                <Text strong>{totalAway}</Text>\n              </Table.Summary.Cell>\n            </Table.Summary.Row>\n          </>\n        );\n      }}\n    />\n  )\n}\n\nconst getLatestTitle = (latestMatch: any) => {\n  return latestMatch ? `Last match added: ${latestMatch.team1} - ${latestMatch.team2} (${latestMatch.date})` : \"\";\n}\n\nexport class TeamContainer extends React.Component<IProps, IState> {\n\n  routes = [\n    {\n      path: 'index',\n      breadcrumbName: 'Home',\n    },\n    {\n      path: 'first',\n      breadcrumbName: 'English Premier League',\n    },\n    {\n      path: 'second',\n      breadcrumbName: 'Chelsea',\n    }\n  ]\n\n  state = {\n    lastSeasonData: [],\n    pointChangeData: [],\n    thisSeasonData: [],\n    lastSeasonDemotedData: [],\n    thisSeasonPromotedData: [],\n    latestMatch: null,\n    loading: false\n  }\n\n  componentDidMount = async () => {\n    try {\n      this.setState({loading: true});\n      console.log(this.props.match.params.leagueId, this.props.match.params.teamId);\n\n      const teamId = this.props.match.params.teamId;\n      let response = await fetch(`https://raw.githubusercontent.com/openfootball/football.json/master/${THIS_SEASON}/${this.props.match.params.leagueId}.clubs.json`);\n      let data = await response.json();\n\n      const thisSeasonClubs = data.clubs.sort((a: any, b: any) => (a.name > b.name) ? 1 : -1);\n      \n      response = await fetch(`https://raw.githubusercontent.com/openfootball/football.json/master/${LAST_SEASON}/${this.props.match.params.leagueId}.clubs.json`);\n      data = await response.json();\n      const lastSeasonClubs = data.clubs.sort((a: any, b: any) => (a.name > b.name) ? 1 : -1);\n\n      let commonClubs = _.intersectionBy(lastSeasonClubs, thisSeasonClubs, 'name').filter((element: any) => element.name !== teamId);\n\n      let lastSeasonDemotedTeams = _.differenceBy(lastSeasonClubs, thisSeasonClubs, 'name');\n      let thisSeasonPromotedTeams = _.differenceBy(thisSeasonClubs, lastSeasonClubs, 'name');\n\n      response = await fetch(`https://raw.githubusercontent.com/openfootball/football.json/master/${LAST_SEASON}/${this.props.match.params.leagueId}.json`);\n      data = await response.json();\n      const lastSeasonMatches = data.matches.filter((a: any) => {\n        return a.team1 === teamId || a.team2 === teamId;\n      });\n\n      response = await fetch(`https://raw.githubusercontent.com/openfootball/football.json/master/${THIS_SEASON}/${this.props.match.params.leagueId}.json`);\n      data = await response.json();\n      const thisSeasonMatches = data.matches.filter((a: any) => {\n        return a.team1 === teamId || a.team2 === teamId;\n      });\n\n      let lastSeasonData: any[] = getSeasonData(commonClubs, lastSeasonMatches, teamId);\n      this.setState({ lastSeasonData });\n\n      let thisSeasonData: any[] = getSeasonData(commonClubs, thisSeasonMatches, teamId);\n      this.setState({ thisSeasonData });\n\n      const pointChangeData = getPointChange(lastSeasonData, thisSeasonData);\n      this.setState({ pointChangeData });\n\n      let lastSeasonDemotedData: any[] = getSeasonData(lastSeasonDemotedTeams, lastSeasonMatches, teamId);\n      // console.log(lastSeasonDemotedData);\n      this.setState({ lastSeasonDemotedData });\n\n\n      let thisSeasonPromotedData: any[] = getSeasonData(thisSeasonPromotedTeams, thisSeasonMatches, teamId);\n      // console.log(thisSeasonPromotedData);\n      this.setState({ thisSeasonPromotedData });\n\n\n      let sortedThisSeasonData: any[] = thisSeasonMatches\n        .filter((a: any) => a.score)\n        .sort((a: any, b: any) => (a.date > b.date) ? 1 : -1);\n      let latestMatch = sortedThisSeasonData[sortedThisSeasonData.length - 1];\n      this.setState({ latestMatch });\n      let key = 'homeScore';\n      let targetTeamKey = 'team2'\n      if (latestMatch.team2 == teamId) {\n        key = 'awayScore';\n        targetTeamKey = 'team1';\n      }\n      for (let index = 0; index < thisSeasonData.length; index++) {\n        const element = thisSeasonData[index];\n        if (element.name === latestMatch[targetTeamKey]) {\n          element[key]['isNew'] = true;\n        }\n      }\n\n      // console.log(thisSeasonData);\n      this.setState({ thisSeasonData });\n\n\n      for (let index = 0; index < thisSeasonPromotedData.length; index++) {\n        const element = thisSeasonPromotedData[index];\n        if (element.name === latestMatch[targetTeamKey]) {\n          element[key]['isNew'] = true;\n        }\n      }\n      this.setState({ thisSeasonPromotedData, loading: false });\n\n\n    } catch (err) {\n      console.log(err);\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { lastSeasonData, thisSeasonData, pointChangeData, lastSeasonDemotedData, thisSeasonPromotedData, latestMatch, loading } = this.state;\n    if(loading) {\n      return(\n        <div\n            // style={{\n            //     \"text-align\": \"center\",\n            //     \"background\": \"rgba(0, 0, 0, 0.05)\",\n            //     \"border-radius\": \"4px\",\n            //     \"margin-bottom\": \"20px\",\n            //     \"padding\": \"30px 50px\",\n            //     \"margin\": \"20px 0\",\n            // }}\n            >\n                <Row justify=\"center\" align=\"middle\"\n                    style={{ minHeight: '100vh' }}\n                >\n                    <Spin\n                    size=\"large\"\n                    // style={{ height: '50%' }}\n                    />\n                </Row>\n\n            </div>\n      )\n    }\n    return (\n      <>\n        \n        <Layout>\n          {/* <Header>Header</Header> */}\n\n          <Content>\n            <PageHeader\n              title={this.props.match.params.teamId}\n              subTitle={getLatestTitle(latestMatch)}\n              // avatar={{ src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4' }}\n              breadcrumb={{\n                routes: [{\n                  path: '/',\n                  breadcrumbName: 'Home',\n                },\n                {\n                  path: `/league/${this.props.match.params.leagueId}`,\n                  breadcrumbName: LEAGUES.filter(a => a.code === this.props.match.params.leagueId)[0].name,\n                },\n                {\n                  path: `/league/${this.props.match.params.leagueId}/team/${this.props.match.params.teamId}`,\n                  breadcrumbName: this.props.match.params.teamId,\n                }]\n              }}\n              \n            />\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              // style={{ marginTop: 20 }}\n              gutter={[20, 20]}\n            >\n              <Alert style={{marginBottom:20}} \n               message=\"Masih Tahap PerJajalan\"\n                type=\"warning\" \n                />\n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              // style={{ marginTop: 20 }}\n              gutter={[20, 20]}\n            >\n              <Title level={3}>Common Teams in Both Seasons</Title>\n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 0]}\n            >\n              <Col\n                xs={{ span: 24 }}\n                sm={{ span: 12 }}\n                md={{ span: 12 }}\n                lg={{ span: 10 }}\n                xl={{ span: 10 }}\n              >\n                {getMatchTable(lastSeasonData, `Last season ${LAST_SEASON}`)}\n              </Col>\n\n              <Col\n                xs={{ span: 24 }}\n                sm={{ span: 12 }}\n                md={{ span: 12 }}\n                lg={{ span: 10 }}\n                xl={{ span: 10 }}\n              >\n                {getMatchTable(thisSeasonData, `This season ${THIS_SEASON}`)}\n              </Col>\n\n              <Col\n                xs={{ span: 24 }}\n                sm={{ span: 12 }}\n                md={{ span: 12 }}\n                lg={{ span: 3 }}\n                xl={{ span: 3 }}\n              >\n\n                <Table\n                  title={(data: any) => \"Point Change\"}\n                  bordered\n                  columns={pointChangeColumn}\n                  dataSource={pointChangeData}\n                  pagination={false}\n                  size=\"small\"\n                  summary={pageData => {\n                    let totalChange = 0;\n\n                    pageData.forEach(({ pointChange }) => {\n                      if (pointChange !== NOT_VALID) {\n                        totalChange += pointChange\n                      }\n                    });\n\n                    return (\n                      <>\n                        <Table.Summary.Row>\n                          <Table.Summary.Cell align=\"center\" index={1}>\n                            <Text strong>{totalChange}</Text>\n                          </Table.Summary.Cell>\n                        </Table.Summary.Row>\n                      </>\n                    );\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              style={{ marginTop: 20 }}\n            // gutter={[20, 20]}\n            >\n              <Title level={3}>Relegated and Promoted Teams</Title>\n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              // style={{ marginTop: 20 }}\n              gutter={[20, 20]}\n            >\n              <Col\n                xs={{ span: 24 }}\n                sm={{ span: 12 }}\n                md={{ span: 12 }}\n                lg={{ span: 9 }}\n                xl={{ span: 9 }}\n              >\n                {getMatchTable(lastSeasonDemotedData, `Last season ${LAST_SEASON}`)}\n              </Col>\n              <Col\n                xs={{ span: 24 }}\n                sm={{ span: 12 }}\n                md={{ span: 12 }}\n                lg={{ span: 9 }}\n                xl={{ span: 9 }}\n              >\n                {getMatchTable(thisSeasonPromotedData, `This season ${THIS_SEASON}`)}\n              </Col>\n            </Row>\n\n          </Content>\n          <Footer>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 10]}\n            >\n             Percoban By Orca - gunwp\n            </Row>\n\n          </Footer>\n        </Layout>\n\n      </>\n\n    )\n  }\n\n\n}\n","import React from 'react';\nimport { Row, Col, Card, PageHeader, Avatar, Layout, Spin, Alert } from 'antd';\nimport { GithubFilled, TwitterSquareFilled } from '@ant-design/icons';\n\nimport { RouteComponentProps } from 'react-router-dom';\nimport { LEAGUES } from 'configs/LeagueConstants';\nimport { RedditIcon, RedditShareButton, TelegramIcon, TelegramShareButton, TwitterIcon, TwitterShareButton } from 'react-share';\n\nconst { Meta } = Card;\nconst { Header, Footer, Sider, Content } = Layout;\n\n\ninterface RouterProps {\n  leagueId: string\n}\n\ninterface IProps extends RouteComponentProps<RouterProps> {\n}\n\ninterface IState {\n  teams: any[],\n  loading:boolean\n}\n\nconst THIS_SEASON = \"2020-21\";\n\nexport class LeagueContainer extends React.Component<IProps, IState> {\n\n  state = {\n    teams: [],\n    loading: false\n  }\n\n  componentDidMount = async () => {\n    this.setState({loading: true});\n    console.log(this.props.match.params.leagueId);\n    const response = await fetch(`https://raw.githubusercontent.com/openfootball/football.json/master/${THIS_SEASON}/${this.props.match.params.leagueId}.clubs.json`);\n    const data = await response.json();\n    // const data = require(`../../assets/data/${THIS_SEASON}/${this.props.match.params.leagueId}.clubs.json`);\n    const clubSorted = data.clubs.sort((a: any, b: any) => (a.name > b.name) ? 1 : -1);\n    this.setState({ teams: clubSorted, loading: false })\n  }\n\n  render() {\n    const { teams, loading} = this.state;\n    if(loading) {\n      return(\n        <div\n            // style={{\n            //     \"text-align\": \"center\",\n            //     \"background\": \"rgba(0, 0, 0, 0.05)\",\n            //     \"border-radius\": \"4px\",\n            //     \"margin-bottom\": \"20px\",\n            //     \"padding\": \"30px 50px\",\n            //     \"margin\": \"20px 0\",\n            // }}\n            >\n                <Row justify=\"center\" align=\"middle\"\n                    style={{ minHeight: '100vh' }}\n                >\n                    <Spin\n                    size=\"large\"\n                    // style={{ height: '50%' }}\n                    />\n                </Row>\n\n            </div>\n      )\n    }\n    return (\n      <>\n        <Layout>\n          {/* <Header>Header</Header> */}\n          <Content>\n            <PageHeader\n              title={LEAGUES.filter(a => a.code === this.props.match.params.leagueId)[0].name}\n              // subTitle=\"Comparison of last and this season. Last match added: Chelsea-Sheffield 2020-11-07\"\n              // avatar={{ src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4' }}\n              breadcrumb={{\n                routes: [{\n                  path: '/',\n                  breadcrumbName: 'Home',\n                },\n                {\n                  path: `/league/${this.props.match.params.leagueId}`,\n                  breadcrumbName: LEAGUES.filter(a => a.code === this.props.match.params.leagueId)[0].name,\n                },\n                ]\n              }}\n              \n            />\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              // style={{ marginTop: 20 }}\n              gutter={[20, 20]}\n            >\n              <Alert style={{marginBottom:20}} \n                message=\"Masih Tahap PerJajalan\"\n                type=\"warning\" \n                />\n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 10]}\n              className=\"todos-container\"\n            >\n              {teams.map((team: any) => {\n                return (\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    md={{ span: 12 }}\n                    lg={{ span: 8 }}\n                    xl={{ span: 6 }}\n                  >\n                    <Card\n                      // title={team.name}\n                      // headStyle={{ textAlign: \"center\" }}\n                      hoverable\n                      // style={{ width: 240 }}\n                      bordered={false}\n                      onClick={(e: any) => {\n                        this.props.history.push(`/league/${this.props.match.params.leagueId}/team/${team.name}`);\n                      }}\n                    // cover={<img alt=\"example\" src=\"https://img.icons8.com/color/48/000000/chelsea-fc.png\" />}\n                    >\n                      <Meta\n                        // avatar={<Avatar src=\"https://img.icons8.com/color/48/000000/chelsea-fc.png\" />}\n                        title={team.name}\n                      // description=\"This is the description\"\n                      />\n                    </Card>\n                  </Col>\n\n                )\n              })\n              }\n            </Row>\n          </Content>\n          <Footer>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 10]}\n            >\n             Percoban By Orca - gunwp\n            </Row>\n\n          </Footer>\n        </Layout>\n\n      </>\n\n    );\n  }\n}\n","import React from 'react';\nimport { Alert, Card, Col, Layout, PageHeader, Row, Typography } from 'antd';\nimport { GithubFilled, TwitterSquareFilled } from '@ant-design/icons';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { RedditIcon, RedditShareButton, TelegramIcon, TelegramShareButton, TwitterIcon, TwitterShareButton } from 'react-share';\nimport { LEAGUES } from 'configs/LeagueConstants';\n\nconst { Title } = Typography;\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Meta } = Card;\n\ninterface RouterProps {\n}\n\ninterface IProps extends RouteComponentProps<RouterProps> {\n}\n\ninterface IState {\n}\n\nexport class DashboardContainer extends React.Component<IProps, IState> {\n\n  state = {\n  }\n\n  componentDidMount = async () => {\n\n  }\n\n  render() {\n    return (\n      <>\n        <Layout>\n          {/* <Header>Header</Header> */}\n          <Content>\n            <PageHeader\n              title=\"Home\"\n              subTitle=\"Compare team's last season and this season\"\n              // avatar={{ src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4' }}\n              // breadcrumb={{\n              //   routes: [{\n              //     path: '/',\n              //     breadcrumbName: 'Home',\n              //   },\n              //   ]\n              // }}\n              extra={[\n              \n                <TelegramShareButton\n                  url=\"http://adupenalti.com\"\n                  title=\"Compare team's last season and this season\"\n                  className=\"Demo__some-network__share-button\"\n                >\n                  <TelegramIcon size={32} round />\n                </TelegramShareButton>\n              ]}\n            />\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              // style={{ marginTop: 20 }}\n              gutter={[20, 20]}\n            >\n              \n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              // style={{ marginTop: 20 }}\n              gutter={[20, 20]}\n            >\n              <Title level={3}>Leagues</Title>\n            </Row>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 10]}\n            >\n              {LEAGUES.map((team: any) => {\n                return (\n                  <Col\n                xs={{ span: 24 }}\n                sm={{ span: 24 }}\n                md={{ span: 6 }}\n                lg={{ span: 4 }}\n                xl={{ span: 4 }}\n              >\n                \n                <Card\n                  // title={team.name}\n                  // headStyle={{ textAlign: \"center\" }}\n                  hoverable\n                  // style={{ width: 400, height:400 }}\n                  bordered={false}\n                  onClick={(e: any) => {\n                    this.props.history.push(`/league/${team.code}`);\n                  }}\n                  // cover={<img alt=\"example\" src={require(`assets/images/leagues/${team.code}.png`)} />}\n                >\n                  {/* <Meta\n                    // avatar={<Avatar src=\"https://img.icons8.com/color/48/000000/chelsea-fc.png\" />}\n                    // title=\"English Premier League\"\n                  // description=\"This is the description\"\n                  /> */}\n                  <Meta\n                        // avatar={<Avatar src=\"https://img.icons8.com/color/48/000000/chelsea-fc.png\" />}\n                        title={team.name}\n                      // description=\"This is the description\"\n                      />\n                </Card>\n              </Col>\n                )\n               })\n               }\n              \n            </Row>\n          </Content>\n          <Footer>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 10]}\n            >\n              \n            </Row>\n\n          </Footer>\n        </Layout>\n\n      </>\n\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { TodosContainer } from 'containers/todos';\nimport { TeamContainer } from 'containers/team';\nimport { LeagueContainer } from 'containers/league';\nimport { DashboardContainer } from 'containers/dashboard';\n\ninterface RoutesProps {}\n\nexport const Routes: React.FunctionComponent<RoutesProps> = () => (\n  <Switch>\n    <Route path=\"/league/:leagueId/team/:teamId\" exact={true} component={TeamContainer} />\n    <Route path=\"/todo\" exact={true} component={TodosContainer} />\n    <Route path=\"/league/:leagueId\" exact={true} component={LeagueContainer} />\n    <Route path=\"/\" exact={true} component={DashboardContainer} />\n  </Switch>\n);\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Routes } from 'routes';\nimport { Store } from 'redux';\nimport { Persistor } from 'redux-persist';\n\ninterface AppProps {\n  store: Store;\n  storePersistor: Persistor;\n}\n\nexport const App: React.StatelessComponent<AppProps> = ({\n  store,\n  storePersistor\n}) => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading...</div>} persistor={storePersistor}>\n        <HashRouter>\n          <Routes />\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React from 'react';\n\nimport 'assets/styles/base.less';\n\nimport { render } from 'react-dom';\n\nimport { store, persistor } from 'store/app.store';\n\nimport { App } from 'containers/app';\n\nconst targetHTMLElement = document.getElementById('root');\n\nrender(<App store={store} storePersistor={persistor} />, targetHTMLElement);\n"],"sourceRoot":""}